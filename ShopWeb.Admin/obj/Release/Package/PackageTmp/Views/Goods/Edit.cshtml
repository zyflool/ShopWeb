@model ShopWeb.Models.GoodsEditModel

@{
    ViewBag.Title = "商品编辑页";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}
<style>
    .back-label {
        text-decoration: none;
        font-size: 20px;
        color: darkblue;
        font-weight: 400;
        display:block;
        float:left;
    }

        .back-label:hover {
            text-decoration: none;
            font-size: 20px;
            font-weight: 600;
            color: darkblue;
            display: block;
            float: left;
        }

        .back-label:after {
            text-decoration: none;
            font-size: 20px;
            color: darkblue;
            font-weight: 400;
            display: block;
            float: left;
        }
    .hide-input {
        width: 0px;
        height: 0px;
        padding-top: 0px;
        padding-bottom: 0px;
        padding-left: 0px;
        padding-right: 0px;
        margin-top: 0px;
        margin-bottom: 0px;
        margin-left: 0px;
        margin-right: 0px;
        background-color: transparent;
        border-bottom-color: transparent;
        border-bottom-width: 0px;
        border-image-width:0;
        border-top-width:0px;
        border-left-width:0px;
        border-right-width:0px;
    }
    .title-edit{
        display:block;
        float:left;
        width:inherit;
        text-align:center;
        font-size:30px;

    }
</style>
<label id="back" class="back-label">返回</label>
<label class="title-edit">商品编辑页</label>
<div style="clear:both"></div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @id = "id-input" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model != null && Model.ImageUrl != null && Model.ImageUrl.Length > 0)
                {
                    <img src="data:image/jpeg;base64, @Model.ImageUrl" id="goods-pic" style="width: 150px; height: 150px;">
                }
                else
                {
                    <img src="" id="goods-pic" style="width: 150px; height: 150px; display: none; ">
                }
                <a href="#" id="upload-pic" class="btn btn-default">上传图片</a>
                <input multiple="multiple" id="file_choose" accept=".jpg" type="file" style="display: none;" />

                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control hide-input", @id = "image-url" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Inventory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Inventory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Inventory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="提交" class="btn btn-default" style="width:150px;text-align:center" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    // 编辑已删除商品提示
    if ('@TempData["error"]'.length > 0) {
        alert('@TempData["error"]');
        history.back();
    }

    // 新增商品id占位
    if ('@Model'.length <= 0) {
        document.getElementById("id-input").value = 0;
    }

    // 返回按钮
    backL = document.getElementById("back");
    backL.onclick = function () {
        window.location = '/'
    }

    // 上传文件
    var fileChoose = document.getElementById('file_choose');
    var uploadA = document.getElementById('upload-pic');
    uploadA.onclick = function () {
        fileChoose.click();
    }

    fileChoose.onchange = function () {
        //如果未传入文件则中断
        if (fileChoose.files[0] == undefined) {
            return;
        }

        var file = fileChoose.files[0];

        //FileReader可直接将上传文件转化为二进制流
        var reader = new FileReader();
        reader.readAsDataURL(file);//转化二进制流，异步方法
        reader.onload = function () {//完成后this.result为二进制流
            var base64Str = this.result;
            console.log(base64Str)
            start = base64Str.indexOf("base64,") + 7
            base64Str = base64Str.substr(start, base64Str.length)
            console.log(base64Str)
            document.getElementById("image-url").value = base64Str;
            var img = document.getElementById('goods-pic');
            img.src = "data:image/jpeg;base64,"+base64Str
            img.style.display = 'inline';
        }
    };
</script>